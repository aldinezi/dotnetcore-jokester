#pragma checksum "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6b59fbc374944dbb06cab04494b0540de9a8e8bb"
// <auto-generated/>
#pragma warning disable 1591
namespace dotnetcoreapp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using dotnetcoreapp;
    using dotnetcoreapp.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/")]
    public class Jokes : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
#line 3 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
 if (IsBusy == true)
{

#line default
#line hidden
            builder.AddContent(0, "    ");
            builder.AddMarkupContent(1, "<div class=\"progress status-loader\">\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\">\n            Loading joke!\n        </div>\n    </div>\n");
#line 10 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
}

#line default
#line hidden
            builder.AddMarkupContent(2, "<p>This component demonstrates fetching data from the server.</p>\n");
            builder.OpenElement(3, "div");
            builder.AddAttribute(4, "class", "btn-toolbar mb-3");
            builder.AddContent(5, "\n    ");
            builder.OpenElement(6, "div");
            builder.AddAttribute(7, "class", "input-group mr-2");
            builder.AddContent(8, "\n        ");
            builder.AddMarkupContent(9, "<div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n                <span class=\"oi oi-fork\" aria-hidden=\"true\"></span>\n            </div>\n        </div>\n        ");
            builder.OpenElement(10, "select");
            builder.AddAttribute(11, "class", "form-control");
            builder.AddAttribute(12, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIChangeEventArgs>(categorySelected));
            builder.AddContent(13, "\n            ");
            builder.AddMarkupContent(14, "<option value=\"\">-- Select Category --</option>\n");
#line 21 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
             foreach (var category in categories)
            {

#line default
#line hidden
            builder.AddContent(15, "                ");
            builder.OpenElement(16, "option");
            builder.AddAttribute(17, "value", category);
            builder.AddContent(18, category);
            builder.CloseElement();
            builder.AddContent(19, "\n");
#line 24 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
            }

#line default
#line hidden
            builder.AddContent(20, "        ");
            builder.CloseElement();
            builder.AddContent(21, "\n    ");
            builder.CloseElement();
            builder.AddContent(22, "\n    ");
            builder.OpenElement(23, "div");
            builder.AddAttribute(24, "class", "btn-group" + " " + (@jokes.Count > 0 || @searchResults.total > 0 ? "mr-2" : "mr-auto"));
            builder.AddContent(25, "\n        ");
            builder.OpenElement(26, "button");
            builder.AddAttribute(27, "class", "btn btn-primary");
            builder.AddAttribute(28, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(FetchJoke));
            builder.AddAttribute(29, "disabled", IsBusy);
            builder.AddMarkupContent(30, "\n            <span class=\"oi oi-plus\" aria-hidden=\"true\"></span> Fetch a Joke!\n        ");
            builder.CloseElement();
            builder.AddContent(31, "\n    ");
            builder.CloseElement();
            builder.AddContent(32, "\n");
#line 32 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
     if(jokes.Count > 0 || searchResults.total > 0)
    {

#line default
#line hidden
            builder.AddContent(33, "        ");
            builder.OpenElement(34, "div");
            builder.AddAttribute(35, "class", "btn-group mr-auto");
            builder.AddContent(36, "\n            ");
            builder.OpenElement(37, "button");
            builder.AddAttribute(38, "class", "btn btn-outline-danger");
            builder.AddAttribute(39, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(RemoveJokes));
            builder.AddAttribute(40, "disabled", IsBusy);
            builder.AddMarkupContent(41, "\n                <span class=\"oi oi-trash\" aria-hidden=\"true\"></span> Clear all\n            ");
            builder.CloseElement();
            builder.AddContent(42, "\n        ");
            builder.CloseElement();
            builder.AddContent(43, "\n");
#line 39 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
    }

#line default
#line hidden
            builder.AddContent(44, "    ");
            builder.OpenElement(45, "div");
            builder.AddAttribute(46, "class", "input-group");
            builder.AddContent(47, "\n        ");
            builder.OpenElement(48, "input");
            builder.AddAttribute(49, "type", "text");
            builder.AddAttribute(50, "class", "form-control");
            builder.AddAttribute(51, "placeholder", "Search for joke content!");
            builder.AddAttribute(52, "aria-label", "Search for joke content!");
            builder.AddAttribute(53, "aria-describedby", "basic-addon2");
            builder.AddAttribute(54, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(searchQuery));
            builder.AddAttribute(55, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => searchQuery = __value, searchQuery));
            builder.CloseElement();
            builder.AddContent(56, "\n        ");
            builder.OpenElement(57, "div");
            builder.AddAttribute(58, "class", "input-group-append");
            builder.AddContent(59, "\n            ");
            builder.OpenElement(60, "button");
            builder.AddAttribute(61, "class", "input-group-text btn");
            builder.AddAttribute(62, "id", "basic-addon2");
            builder.AddAttribute(63, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(getSearch));
            builder.AddMarkupContent(64, "\n                <span class=\"oi oi-magnifying-glass\"></span>\n            ");
            builder.CloseElement();
            builder.AddContent(65, "\n        ");
            builder.CloseElement();
            builder.AddContent(66, "\n    ");
            builder.CloseElement();
            builder.AddContent(67, "\n");
            builder.CloseElement();
            builder.AddContent(68, "\n\n\n");
            builder.OpenElement(69, "div");
            builder.AddAttribute(70, "class", "container-fluid");
            builder.AddContent(71, "\n    ");
            builder.OpenElement(72, "div");
            builder.AddAttribute(73, "class", "row increased");
            builder.AddContent(74, "\n");
#line 62 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
         foreach (var item in jokes)
        {

#line default
#line hidden
            builder.AddContent(75, "            ");
            builder.OpenElement(76, "div");
            builder.AddAttribute(77, "class", "card-wrap col-md-3 ");
            builder.AddContent(78, "\n                ");
            builder.OpenElement(79, "div");
            builder.AddAttribute(80, "class", "card animated zoomIn");
            builder.AddContent(81, "\n                    ");
            builder.OpenElement(82, "div");
            builder.AddAttribute(83, "class", "card-body");
            builder.AddContent(84, "\n                        ");
            builder.OpenElement(85, "p");
            builder.AddAttribute(86, "class", "card-text");
            builder.AddContent(87, "\n                            ");
            builder.AddContent(88, item.value);
            builder.AddContent(89, "\n                        ");
            builder.CloseElement();
            builder.AddContent(90, "\n                        ");
            builder.OpenElement(91, "button");
            builder.AddAttribute(92, "class", "btn btn-outline-danger");
            builder.AddAttribute(93, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(() => RemoveJoke(@item.fetchIndex)));
            builder.AddMarkupContent(94, "\n                            <span class=\"oi oi-x\" aria-hidden=\"true\"></span>\n                        ");
            builder.CloseElement();
            builder.AddContent(95, "\n                    ");
            builder.CloseElement();
            builder.AddContent(96, "\n                ");
            builder.CloseElement();
            builder.AddContent(97, "\n            ");
            builder.CloseElement();
            builder.AddContent(98, "\n");
#line 78 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
        }

#line default
#line hidden
            builder.AddContent(99, "        ");
#line 79 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
         if(searchResults.total > 0)
        {
            

#line default
#line hidden
#line 81 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
             foreach (var item in searchResults.result)
            {

#line default
#line hidden
            builder.AddContent(100, "                ");
            builder.OpenElement(101, "div");
            builder.AddAttribute(102, "class", "card-wrap col-md-3 ");
            builder.AddContent(103, "\n                    ");
            builder.OpenElement(104, "div");
            builder.AddAttribute(105, "class", "card animated zoomIn");
            builder.AddContent(106, "\n                        ");
            builder.OpenElement(107, "div");
            builder.AddAttribute(108, "class", "card-body");
            builder.AddContent(109, "\n                            ");
            builder.OpenElement(110, "p");
            builder.AddAttribute(111, "class", "card-text");
            builder.AddContent(112, "\n                                ");
            builder.AddContent(113, item.value);
            builder.AddContent(114, "\n                            ");
            builder.CloseElement();
            builder.AddContent(115, "\n                        ");
            builder.CloseElement();
            builder.AddContent(116, "\n                    ");
            builder.CloseElement();
            builder.AddContent(117, "\n                ");
            builder.CloseElement();
            builder.AddContent(118, "\n");
#line 92 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
            }

#line default
#line hidden
#line 92 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
             
        }

#line default
#line hidden
            builder.AddContent(119, "\n    ");
            builder.CloseElement();
            builder.AddContent(120, "\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 98 "/home/aldin/Desktop/dotnetcoreapp/Pages/Jokes.cshtml"
            
    ChuckJoke joke;
    IList<ChuckJoke> jokes = new List<ChuckJoke>();
    int index=0;
    bool IsBusy = false;
    IList<string> categories = new List<string>();
    string category;
    public string searchQuery { get; set; }
    SearchResults searchResults = new SearchResults();

    //Fetch random joke https://api.chucknorris.io/jokes/random

    protected async Task FetchJoke()
    {
        IsBusy = true;
        if(category != "")
        {
            joke = await Http.GetJsonAsync<ChuckJoke>("https://api.chucknorris.io/jokes/random?category="+ category);
        }
        else
        {
            joke = await Http.GetJsonAsync<ChuckJoke>("https://api.chucknorris.io/jokes/random");
        }
        if(searchResults.total > 0)
        {
            searchResults = new SearchResults();
        }
        joke.fetchIndex = index;
        index++;
        jokes.Add(joke);
        IsBusy = false;
        StateHasChanged();
    }

    //Fetch jokes categories https://api.chucknorris.io/jokes/categories

    protected override async Task OnInitAsync()
    {
        categories = await Http.GetJsonAsync<IList<string>>("https://api.chucknorris.io/jokes/categories");
    }

    void categorySelected(UIChangeEventArgs categoryEvent)
    {
        category = categoryEvent.Value.ToString();
    }

    void EmptyCurrentJoke()
    {
        joke = null;
    }

    public void RemoveJoke(int i)
    {
        var itemToRemove = jokes.Single(j => j.fetchIndex == i);
        jokes.Remove(itemToRemove);
    }

    public void RemoveJokes()
    {
        joke = null;
        jokes.Clear();
        searchResults = new SearchResults();
    }

    public async void getSearch()
    {
        IsBusy = true;
        jokes.Clear();
        Console.WriteLine("Let's search!");
        Console.WriteLine(@searchQuery);
        searchResults = await Http.GetJsonAsync<SearchResults>("https://api.chucknorris.io/jokes/search?query="+searchQuery);
        IsBusy = false;
        StateHasChanged();
    }

    class ChuckJoke
    {
        public string icon_url { get; set; }
        public string id { get; set; }
        public string url { get; set; }
        public string value { get; set; }
        public int fetchIndex { get; set; }
    }

    public class Result
    {
        public List<string> category { get; set; }
        public string icon_url { get; set; }
        public string id { get; set; }
        public string url { get; set; }
        public string value { get; set; }
    }

    public class SearchResults
    {
        public int total { get; set; }
        public List<Result> result { get; set; }
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
